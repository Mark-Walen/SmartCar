if (CHIP MATCHES "STM32F103.(.).*")
    if (CMAKE_MATCH_1 STREQUAL "6")
        set(FLASH STM32F10X_LD)
        set(STARTUP STM32F103x6)
    elseif (CMAKE_MATCH_1 STREQUAL "8" OR CMAKE_MATCH_1 STREQUAL "B")
        set(FLASH STM32F10X_MD)
        set(STARTUP STM32F103xB)
    elseif (CMAKE_MATCH_1 STREQUAL "C" OR CMAKE_MATCH_1 STREQUAL "D" OR CMAKE_MATCH_1 STREQUAL "E")
        set(FLASH STM32F10X_HD)
        set(STARTUP STM32F103xE)
    elseif (CMAKE_MATCH_1 STREQUAL "F" OR CMAKE_MATCH_1 STREQUAL "G")
        set(FLASH STM32F10X_HD)
        set(STARTUP STM32F103xG)
    endif ()
endif ()

message(STATUS "hal ${CHIP} ${STARTUP} ${FLASH}")

string(TOLOWER ${STARTUP} STARTUP_LOWER)
# Collect enabled modules
set(HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/core/src/system_stm32f1xx.c")
set(STARTUP_FILE "${CMAKE_CURRENT_SOURCE_DIR}/core/cmsis/Device/ST/STM32F1xx/Source/Templates/arm/startup_${STARTUP_LOWER}.s"  CACHE STRING "Path to the startup file")

if (HAL_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal.c")
endif ()

if (HAL_ADC_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_adc.c")
endif ()

if (HAL_CRYP_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_cryp.c")
endif ()

if (HAL_CAN_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_can.c")
endif ()

if (HAL_CAN_LEGACY_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_can_legacy.c")
endif ()

if (HAL_CEC_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_cec.c")
endif ()

if (HAL_CORTEX_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_cortex.c")
endif ()

if (HAL_CRC_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_crc.c")
endif ()

if (HAL_DAC_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_dac.c")
endif ()

if (HAL_DMA_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_dma.c")
endif ()

if (HAL_ETH_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_eth.c")
endif ()

if (HAL_FLASH_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_flash.c")
endif ()

if (HAL_EXTI_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_exti.c")
endif ()

if (HAL_GPIO_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_gpio.c")
endif ()

if (HAL_I2C_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_i2c.c")
endif ()

if (HAL_I2S_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_i2s.c")
endif ()

if (HAL_IRDA_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_irda.c")
endif ()

if (HAL_IWDG_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_iwdg.c")
endif ()

if (HAL_NOR_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_nor.c")
endif ()

if (HAL_NAND_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_nand.c")
endif ()

if (HAL_PCCARD_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_pccard.c")
endif ()

if (HAL_PCD_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_pcd.c")
endif ()

if (HAL_HCD_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_hcd.c")
endif ()

if (HAL_PWR_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_pwr.c")
endif ()

if (HAL_RCC_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_rcc.c")
endif ()

if (HAL_RTC_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_rtc.c")
endif ()

if (HAL_SD_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_sd.c")
endif ()

if (HAL_MMC_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_mmc.c")
endif ()

if (HAL_SDRAM_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_sdram.c")
endif ()

if (HAL_SMARTCARD_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_smartcard.c")
endif ()

if (HAL_SPI_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_spi.c")
endif ()

if (HAL_SRAM_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_sram.c")
endif ()

if (HAL_TIM_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_tim.c")
endif ()

if (HAL_UART_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_uart.c")
endif ()

if (HAL_WWDG_MODULE_ENABLED)
    list(APPEND HAL_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/stm32f1xx_hal_wwdg.c")
endif ()

# Add HAL library
add_library(hal STATIC ${HAL_SOURCES})

target_include_directories(hal PUBLIC
        ${CMAKE_SOURCE_DIR}/config/stm32f1xx
        ${CMAKE_SOURCE_DIR}/drivers/hal/stm32f1xx/inc
        ${CMAKE_SOURCE_DIR}/drivers/hal/stm32f1xx/inc/Legacy
        ${CMAKE_SOURCE_DIR}/drivers/hal/stm32f1xx/core/cmsis/inc
        ${CMAKE_SOURCE_DIR}/drivers/hal/stm32f1xx/core/cmsis/Core/Include
        ${CMAKE_SOURCE_DIR}/drivers/hal/stm32f1xx/core/cmsis/Device/ST/STM32F1xx/Include
)

# Conditionally add compile definitions based on the options
target_compile_definitions(hal PUBLIC
        USE_HAL_DRIVER ${STARTUP} ${FLASH}
        $<$<BOOL:${HAL_MODULE_ENABLED}>:HAL_MODULE_ENABLED>
        $<$<BOOL:${HAL_ADC_MODULE_ENABLED}>:HAL_ADC_MODULE_ENABLED>
        $<$<BOOL:${HAL_CRYP_MODULE_ENABLED}>:HAL_CRYP_MODULE_ENABLED>
        $<$<BOOL:${HAL_CAN_MODULE_ENABLED}>:HAL_CAN_MODULE_ENABLED>
        $<$<BOOL:${HAL_CAN_LEGACY_MODULE_ENABLED}>:HAL_CAN_LEGACY_MODULE_ENABLED>
        $<$<BOOL:${HAL_CEC_MODULE_ENABLED}>:HAL_CEC_MODULE_ENABLED>
        $<$<BOOL:${HAL_CORTEX_MODULE_ENABLED}>:HAL_CORTEX_MODULE_ENABLED>
        $<$<BOOL:${HAL_CRC_MODULE_ENABLED}>:HAL_CRC_MODULE_ENABLED>
        $<$<BOOL:${HAL_DAC_MODULE_ENABLED}>:HAL_DAC_MODULE_ENABLED>
        $<$<BOOL:${HAL_DMA_MODULE_ENABLED}>:HAL_DMA_MODULE_ENABLED>
        $<$<BOOL:${HAL_ETH_MODULE_ENABLED}>:HAL_ETH_MODULE_ENABLED>
        $<$<BOOL:${HAL_FLASH_MODULE_ENABLED}>:HAL_FLASH_MODULE_ENABLED>
        $<$<BOOL:${HAL_EXTI_MODULE_ENABLED}>:HAL_EXTI_MODULE_ENABLED>
        $<$<BOOL:${HAL_GPIO_MODULE_ENABLED}>:HAL_GPIO_MODULE_ENABLED>
        $<$<BOOL:${HAL_I2C_MODULE_ENABLED}>:HAL_I2C_MODULE_ENABLED>
        $<$<BOOL:${HAL_I2S_MODULE_ENABLED}>:HAL_I2S_MODULE_ENABLED>
        $<$<BOOL:${HAL_IRDA_MODULE_ENABLED}>:HAL_IRDA_MODULE_ENABLED>
        $<$<BOOL:${HAL_IWDG_MODULE_ENABLED}>:HAL_IWDG_MODULE_ENABLED>
        $<$<BOOL:${HAL_NOR_MODULE_ENABLED}>:HAL_NOR_MODULE_ENABLED>
        $<$<BOOL:${HAL_NAND_MODULE_ENABLED}>:HAL_NAND_MODULE_ENABLED>
        $<$<BOOL:${HAL_PCCARD_MODULE_ENABLED}>:HAL_PCCARD_MODULE_ENABLED>
        $<$<BOOL:${HAL_PCD_MODULE_ENABLED}>:HAL_PCD_MODULE_ENABLED>
        $<$<BOOL:${HAL_HCD_MODULE_ENABLED}>:HAL_HCD_MODULE_ENABLED>
        $<$<BOOL:${HAL_PWR_MODULE_ENABLED}>:HAL_PWR_MODULE_ENABLED>
        $<$<BOOL:${HAL_RCC_MODULE_ENABLED}>:HAL_RCC_MODULE_ENABLED>
        $<$<BOOL:${HAL_RTC_MODULE_ENABLED}>:HAL_RTC_MODULE_ENABLED>
        $<$<BOOL:${HAL_SD_MODULE_ENABLED}>:HAL_SD_MODULE_ENABLED>
        $<$<BOOL:${HAL_MMC_MODULE_ENABLED}>:HAL_MMC_MODULE_ENABLED>
        $<$<BOOL:${HAL_SDRAM_MODULE_ENABLED}>:HAL_SDRAM_MODULE_ENABLED>
        $<$<BOOL:${HAL_SMARTCARD_MODULE_ENABLED}>:HAL_SMARTCARD_MODULE_ENABLED>
        $<$<BOOL:${HAL_SPI_MODULE_ENABLED}>:HAL_SPI_MODULE_ENABLED>
        $<$<BOOL:${HAL_SRAM_MODULE_ENABLED}>:HAL_SRAM_MODULE_ENABLED>
        $<$<BOOL:${HAL_TIM_MODULE_ENABLED}>:HAL_TIM_MODULE_ENABLED>
        $<$<BOOL:${HAL_UART_MODULE_ENABLED}>:HAL_UART_MODULE_ENABLED>
        $<$<BOOL:${HAL_USART_MODULE_ENABLED}>:HAL_USART_MODULE_ENABLED>
        $<$<BOOL:${HAL_WWDG_MODULE_ENABLED}>:HAL_WWDG_MODULE_ENABLED>
)
